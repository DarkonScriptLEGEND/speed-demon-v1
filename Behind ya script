--// Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")

--// References
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")
local Humanoid = Character:WaitForChild("Humanoid")

--// UI Setup
local ScreenGui = Instance.new("ScreenGui", game.CoreGui)
ScreenGui.Name = "BehindYaGui"
ScreenGui.ResetOnSpawn = false

local ToggleBtn = Instance.new("TextButton")
ToggleBtn.Size = UDim2.new(0, 140, 0, 40)
ToggleBtn.Position = UDim2.new(0, 5, 0, 5)
ToggleBtn.BackgroundColor3 = Color3.fromRGB(0, 120, 255) -- blue when off
ToggleBtn.TextColor3 = Color3.new(1,1,1)
ToggleBtn.Text = "Behind ya OFF"
ToggleBtn.Parent = ScreenGui
ToggleBtn.Font = Enum.Font.GothamBold
ToggleBtn.TextSize = 18
ToggleBtn.Active = true
ToggleBtn.AutoButtonColor = false

-- Status text above player
local BillboardGui = Instance.new("BillboardGui")
BillboardGui.Adornee = HumanoidRootPart
BillboardGui.Size = UDim2.new(0, 100, 0, 40)
BillboardGui.StudsOffset = Vector3.new(0, 3, 0)
BillboardGui.AlwaysOnTop = true
BillboardGui.Parent = Character

local StatusText = Instance.new("TextLabel")
StatusText.Size = UDim2.new(1, 0, 1, 0)
StatusText.BackgroundTransparency = 1
StatusText.Text = ""
StatusText.TextColor3 = Color3.new(1,1,1)
StatusText.TextStrokeTransparency = 0
StatusText.Font = Enum.Font.GothamBold
StatusText.TextSize = 24
StatusText.Parent = BillboardGui

-- Sounds
local TeleportSound = Instance.new("Sound")
TeleportSound.SoundId = "rbxassetid://12222242" -- teleport sound ID (replace if needed)
TeleportSound.Volume = 1
TeleportSound.Parent = HumanoidRootPart

local SpeedCoilSound = Instance.new("Sound")
SpeedCoilSound.SoundId = "rbxassetid://12222145" -- speed coil sound ID (replace if needed)
SpeedCoilSound.Volume = 1
SpeedCoilSound.Parent = HumanoidRootPart

--// Variables
local enabled = false
local selfDestructActive = false
local isTeleportingBackForth = false

local lastTeleportTime = 0
local TELEPORT_COOLDOWN = 0.3

-- Bounds of map (adjust to your map's boundaries)
local minX, maxX = -500, 500
local minZ, maxZ = -500, 500

-- Helper to keep position in bounds with 5 stud margin
local function clampPosition(pos)
    local x = math.clamp(pos.X, minX + 5, maxX - 5)
    local y = pos.Y
    local z = math.clamp(pos.Z, minZ + 5, maxZ - 5)
    return Vector3.new(x, y, z)
end

-- Get furthest safe position from current pos (within bounds)
local function getFurthestSafePos(currentPos)
    local candidates = {
        Vector3.new(minX + 10, currentPos.Y, minZ + 10),
        Vector3.new(minX + 10, currentPos.Y, maxZ - 10),
        Vector3.new(maxX - 10, currentPos.Y, minZ + 10),
        Vector3.new(maxX - 10, currentPos.Y, maxZ - 10),
    }

    local furthest = candidates[1]
    local maxDist = 0
    for _, pos in ipairs(candidates) do
        local dist = (pos - currentPos).Magnitude
        if dist > maxDist then
            maxDist = dist
            furthest = pos
        end
    end
    return clampPosition(furthest)
end

-- Check if behind target is clear (raycast)
local function canTeleportBehind(targetHRP)
    local backDir = -targetHRP.CFrame.LookVector
    local checkPos = targetHRP.Position + backDir * 45
    checkPos = clampPosition(checkPos)

    local rayParams = RaycastParams.new()
    rayParams.FilterDescendantsInstances = {Character}
    rayParams.FilterType = Enum.RaycastFilterType.Blacklist

    local rayResult = workspace:Raycast(targetHRP.Position + Vector3.new(0, 2, 0), backDir * 45, rayParams)
    return (not rayResult) or (rayResult.Instance == nil)
end

-- Display "Poof" text above player for 1 second
local function showPoofText()
    StatusText.Text = "Poof"
    StatusText.TextColor3 = Color3.new(1, 1, 1)
    task.delay(1, function()
        if not selfDestructActive then
            StatusText.Text = ""
        end
    end)
end

-- Teleport behind player or furthest safe pos if blocked
local function teleportBehind(targetHRP)
    if canTeleportBehind(targetHRP) then
        local backPos = targetHRP.Position - targetHRP.CFrame.LookVector * 45
        backPos = clampPosition(backPos)
        HumanoidRootPart.CFrame = CFrame.new(backPos, targetHRP.Position)
    else
        local furthest = getFurthestSafePos(HumanoidRootPart.Position)
        HumanoidRootPart.CFrame = CFrame.new(furthest)
    end
    TeleportSound:Play()
    showPoofText()
end

-- Self destruct sequence
local function selfDestructSequence()
    if selfDestructActive then return end
    selfDestructActive = true

    StatusText.Text = "Self Destruct"
    StatusText.TextColor3 = Color3.new(1, 0, 0) -- red

    task.wait(0.1) -- short delay

    -- Teleport into air
    local airPos = HumanoidRootPart.Position + Vector3.new(0, 60, 0)
    HumanoidRootPart.CFrame = CFrame.new(airPos)

    local startTime = tick()
    isTeleportingBackForth = true

    while tick() - startTime < 5 and isTeleportingBackForth do
        local leftPos = Vector3.new((minX + maxX) / 2 - 50, airPos.Y, (minZ + maxZ) / 2)
        local rightPos = Vector3.new((minX + maxX) / 2 + 50, airPos.Y, (minZ + maxZ) / 2)

        HumanoidRootPart.CFrame = CFrame.new(leftPos)
        task.wait(0.35)
        if not isTeleportingBackForth then break end
        HumanoidRootPart.CFrame = CFrame.new(rightPos)
        task.wait(0.35)
    end

    -- Teleport to center
    local centerPos = Vector3.new((minX + maxX) / 2, airPos.Y, (minZ + maxZ) / 2)
    HumanoidRootPart.CFrame = CFrame.new(centerPos)

    selfDestructActive = false
    isTeleportingBackForth = false
    StatusText.Text = ""
end

-- Teleport behind logic loop
local function behindYaLoop()
    local lastTarget = nil
    local lastTeleportTime = 0

    while enabled and Character and Humanoid and HumanoidRootPart and Humanoid.Health > 0 do
        local nearestPlayer = nil
        local nearestDistance = math.huge

        for _, plr in pairs(Players:GetPlayers()) do
            if plr ~= LocalPlayer and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") and plr.Character:FindFirstChild("Humanoid") and plr.Character.Humanoid.Health > 0 then
                local dist = (plr.Character.HumanoidRootPart.Position - HumanoidRootPart.Position).Magnitude
                if dist < nearestDistance and dist <= 85 then
                    nearestPlayer = plr
                    nearestDistance = dist
                end
            end
        end

        if nearestPlayer and nearestPlayer.Character then
            local targetHRP = nearestPlayer.Character.HumanoidRootPart
            local dist = (targetHRP.Position - HumanoidRootPart.Position).Magnitude
            local vel = nearestPlayer.Character.HumanoidRootPart.AssemblyLinearVelocity.Magnitude

            -- Teleport behind if target moving and cooldown passed
            local currentTime = tick()
            if (currentTime - lastTeleportTime) >= TELEPORT_COOLDOWN and vel > 0.1 then
                teleportBehind(targetHRP)
                lastTeleportTime = currentTime
                lastTarget = nearestPlayer
            end

            -- Self destruct if very close
            if dist <= 6 and not selfDestructActive then
                task.spawn(selfDestructSequence)
            end
        end

        task.wait(0.1)
    end
end

-- Button toggling
ToggleBtn.MouseButton1Click:Connect(function()
    enabled = not enabled

    if enabled then
        ToggleBtn.BackgroundColor3 = Color3.fromRGB(255, 221, 0) -- yellow on
        ToggleBtn.Text = "Behind ya ON"
        task.spawn(behindYaLoop)
    else
        ToggleBtn.BackgroundColor3 = Color3.fromRGB(0, 120, 255) -- blue off
        ToggleBtn.Text = "Behind ya OFF"
        selfDestructActive = false
        isTeleportingBackForth = false
        StatusText.Text = ""
    end
end)

-- Character update handling
local function updateCharacterRefs(char)
    Character = char
    HumanoidRootPart = char:WaitForChild("HumanoidRootPart")
    Humanoid = char:WaitForChild("Humanoid")
    TeleportSound.Parent = HumanoidRootPart
    SpeedCoilSound.Parent = HumanoidRootPart
    BillboardGui.Adornee = HumanoidRootPart
end

LocalPlayer.CharacterAdded:Connect(updateCharacterRefs)
updateCharacterRefs(Character)

-- Reset flags on humanoid death
Humanoid.Died:Connect(function()
    selfDestructActive = false
    isTeleportingBackForth = false
    StatusText.Text = ""
end)

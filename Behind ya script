--// Services
local Players, RunService, Workspace = game:GetService("Players"), game:GetService("RunService"), game:GetService("Workspace")
local TweenService, LocalPlayer = game:GetService("TweenService"), Players.LocalPlayer
local SoundService, Camera = game:GetService("SoundService"), Workspace.CurrentCamera

--// Variables
local gui, hrp, char, active, cooldown = Instance.new("ScreenGui", game.CoreGui), nil, nil, false, false
local radiusBehind, radiusFlee, radiusClose = 85, 195, 35
local loopActive, selfDestructActive = false, false

--// Sounds
local teleportSound = Instance.new("Sound", SoundService)
teleportSound.SoundId = "rbxassetid://9118823102"
teleportSound.Volume = 2

local bypassSound = Instance.new("Sound", SoundService)
bypassSound.SoundId = "rbxassetid://7489482123"
bypassSound.Volume = 2

--// Helpers
local function getChar() char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait() hrp = char:WaitForChild("HumanoidRootPart") end
local function showText(txt, color, dur)
	local b = Instance.new("BillboardGui", char) b.Adornee = hrp b.Size = UDim2.new(0,200,0,50)
	local l = Instance.new("TextLabel", b) l.Size = UDim2.new(1,0,1,0) l.Text = txt l.TextColor3 = color l.BackgroundTransparency = 1
	game.Debris:AddItem(b, dur)
end

local function safePos(pos)
	local size = Workspace:GetExtentsSize()/2 - Vector3.new(5,0,5)
	if math.abs(pos.X) > size.X or math.abs(pos.Z) > size.Z then return false end
	local reg = Region3.new(pos-Vector3.new(2,3,2), pos+Vector3.new(2,3,2))
	local parts = Workspace:FindPartsInRegion3(reg, nil, 5)
	for _, p in pairs(parts) do if p.CanCollide and p.Transparency < 0.95 then return true end end
	return false
end

local function getFurthest()
	local pos, maxDist = hrp.Position, 0
	local best = pos
	for _, p in ipairs(Workspace:GetDescendants()) do
		if p:IsA("BasePart") and safePos(p.Position + Vector3.new(0,5,0)) then
			local dist = (p.Position - pos).Magnitude
			if dist > maxDist then maxDist = dist best = p.Position + Vector3.new(0,5,0) end
		end
	end
	return best
end

local function teleportTo(pos)
	teleportSound:Play()
	hrp.CFrame = CFrame.new(pos)
end

local function startCooldown()
	cooldown = true
	showText("Cooldown...", Color3.fromRGB(255,255,0), 2.3)
	task.wait(2.3)
	cooldown = false
end

local function escapeStuck()
	if hrp.Position.Y < -10 then
		bypassSound:Play()
		showText("Successfully bypassed anti cheat", Color3.fromRGB(0,255,0), 3)
		teleportTo(getFurthest())
		startCooldown()
	end
end

--// Main Logic
RunService.RenderStepped:Connect(function()
	if not active or cooldown then return end
	getChar()
	local closest, dist = nil, math.huge
	for _, plr in pairs(Players:GetPlayers()) do
		if plr ~= LocalPlayer and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
			local d = (plr.Character.HumanoidRootPart.Position - hrp.Position).Magnitude
			if d < dist then closest = plr dist = d end
		end
	end
	if closest then
		if dist <= radiusClose then -- self destruct
			selfDestructActive = true
			for _ = 1, 10 do
				teleportTo(getFurthest())
				task.wait(0.3)
			end
			startCooldown()
			selfDestructActive = false
		elseif dist <= radiusBehind then
			local targetHRP = closest.Character and closest.Character:FindFirstChild("HumanoidRootPart")
			if targetHRP then
				local behind = targetHRP.CFrame * CFrame.new(0, 0,  -45)
				if safePos(behind.Position) then
					showText("Poof!", Color3.fromRGB(255, 255, 255), 1)
					teleportTo(behind.Position)
					startCooldown()
				end
			end
		elseif dist <= radiusFlee then
			if loopActive then
				for _ = 1, 5 do
					local furthest = getFurthest()
					teleportTo(furthest)
					task.wait(0.3)
				end
				startCooldown()
			end
		end
	end
	escapeStuck()
end)

--// GUI
gui.Name = "UntouchableUI"
local toggle = Instance.new("TextButton", gui)
toggle.Size = UDim2.new(0,160,0,35)
toggle.Position = UDim2.new(0,10,0,10)
toggle.Text = "Behind Ya: OFF"
toggle.BackgroundColor3 = Color3.fromRGB(0,0,255)
toggle.MouseButton1Click:Connect(function()
	active = not active
	toggle.Text = "Behind Ya: " .. (active and "ON" or "OFF")
	toggle.BackgroundColor3 = active and Color3.fromRGB(255,255,0) or Color3.fromRGB(0,0,255)
end)

local circleBtn = Instance.new("TextButton", gui)
circleBtn.Size = UDim2.new(0,160,0,35)
circleBtn.Position = UDim2.new(0,10,0,50)
circleBtn.Text = "Toggle Circle Loop"
circleBtn.BackgroundColor3 = Color3.fromRGB(180, 100, 255)
circleBtn.MouseButton1Click:Connect(function()
	loopActive = not loopActive
	circleBtn.Text = loopActive and "Circle Loop: ON" or "Toggle Circle Loop"
end)

local hideBtn = Instance.new("TextButton", gui)
hideBtn.Size = UDim2.new(0,100,0,30)
hideBtn.Position = UDim2.new(0,180,0,10)
hideBtn.Text = "Hide GUI"
hideBtn.MouseButton1Click:Connect(function()
	for _, b in pairs(gui:GetChildren()) do
		if b:IsA("TextButton") and b ~= hideBtn then
			b.Visible = not b.Visible
		end
	end
	hideBtn.Text = hideBtn.Text == "Hide GUI" and "Show GUI" or "Hide GUI"
end)

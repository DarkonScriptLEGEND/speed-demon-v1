--// Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")
local LocalPlayer = Players.LocalPlayer
local Camera = Workspace.CurrentCamera

-- Utility functions
local function getCharacter(plr)
	return plr.Character or plr.CharacterAdded:Wait()
end

local function getHRP(plr)
	local char = getCharacter(plr)
	return char and char:FindFirstChild("HumanoidRootPart")
end

-- Check if position is inside map bounds and safe to teleport
local function safeCFrame(pos)
	local size = Workspace:GetExtentsSize() / 2 - Vector3.new(5, 0, 5)
	if math.abs(pos.X) > size.X or math.abs(pos.Z) > size.Z then
		return false
	end
	local region = Region3.new(pos - Vector3.new(2, 3, 2), pos + Vector3.new(2, 3, 2))
	local parts = Workspace:FindPartsInRegion3(region, nil, 5)
	for _, p in pairs(parts) do
		if p.CanCollide and p.Transparency < 0.95 then return true end
	end
	return false
end

-- Find furthest safe location from player
local function getFurthest()
	local root = getHRP(LocalPlayer)
	if not root then return Vector3.new(0,10,0) end
	local best = root.Position
	local maxDist = 0
	for _, part in pairs(Workspace:GetDescendants()) do
		if part:IsA("BasePart") then
			local pos = part.Position + Vector3.new(0, 5, 0)
			if safeCFrame(pos) then
				local dist = (pos - root.Position).Magnitude
				if dist > maxDist then
					maxDist = dist
					best = pos
				end
			end
		end
	end
	return best
end

-- GUI Setup
local gui = Instance.new("ScreenGui", game.CoreGui)
gui.Name = "BehindYaUI"

local toggleBtn = Instance.new("TextButton", gui)
toggleBtn.Size = UDim2.new(0, 150, 0, 35)
toggleBtn.Position = UDim2.new(0, 10, 0, 10)
toggleBtn.Text = "Behind Ya: OFF"
toggleBtn.BackgroundColor3 = Color3.fromRGB(0, 0, 255)
toggleBtn.TextColor3 = Color3.new(1, 1, 1)
toggleBtn.AutoButtonColor = false

local viewBtn = Instance.new("TextButton", gui)
viewBtn.Size = UDim2.new(0, 130, 0, 30)
viewBtn.Position = UDim2.new(0, 10, 0, 50)
viewBtn.Text = "üëÅ View Player"
viewBtn.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
viewBtn.TextColor3 = Color3.new(1, 1, 1)

local unviewBtn = Instance.new("TextButton", gui)
unviewBtn.Size = UDim2.new(0, 130, 0, 30)
unviewBtn.Position = UDim2.new(0, 10, 0, 85)
unviewBtn.Text = "üíô Unview Self"
unviewBtn.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
unviewBtn.TextColor3 = Color3.new(1, 1, 1)

local testSelfDestructBtn = Instance.new("TextButton", gui)
testSelfDestructBtn.Size = UDim2.new(0, 150, 0, 30)
testSelfDestructBtn.Position = UDim2.new(0, 10, 0, 120)
testSelfDestructBtn.Text = "Test Self-Destruct"
testSelfDestructBtn.BackgroundColor3 = Color3.fromRGB(255, 100, 100)
testSelfDestructBtn.TextColor3 = Color3.new(1, 1, 1)

local testCircleLoopBtn = Instance.new("TextButton", gui)
testCircleLoopBtn.Size = UDim2.new(0, 150, 0, 30)
testCircleLoopBtn.Position = UDim2.new(0, 10, 0, 160)
testCircleLoopBtn.Text = "Test Circle Loop"
testCircleLoopBtn.BackgroundColor3 = Color3.fromRGB(100, 255, 100)
testCircleLoopBtn.TextColor3 = Color3.new(1, 1, 1)

local hideGuiBtn = Instance.new("TextButton", gui)
hideGuiBtn.Size = UDim2.new(0, 150, 0, 30)
hideGuiBtn.Position = UDim2.new(0, 10, 0, 200)
hideGuiBtn.Text = "Hide GUI"
hideGuiBtn.BackgroundColor3 = Color3.fromRGB(180, 180, 180)
hideGuiBtn.TextColor3 = Color3.new(0, 0, 0)

-- Teleport and speed sounds
local teleportSound = Instance.new("Sound", game.SoundService)
teleportSound.SoundId = "rbxassetid://9118823102" -- Replace with your preferred teleport sound
teleportSound.Volume = 2

local speedSound = Instance.new("Sound", game.SoundService)
speedSound.SoundId = "rbxassetid://9118829390" -- Speed coil sound
speedSound.Volume = 1

-- Text display on screen
local function showText(msg, color, duration)
	local textLabel = Instance.new("TextLabel", gui)
	textLabel.Text = msg
	textLabel.TextColor3 = color or Color3.new(1,1,1)
	textLabel.BackgroundTransparency = 0.5
	textLabel.BackgroundColor3 = Color3.new(0,0,0)
	textLabel.Size = UDim2.new(0, 200, 0, 30)
	textLabel.Position = UDim2.new(0.5, -100, 1, -40)
	textLabel.TextScaled = true
	textLabel.Font = Enum.Font.SourceSansBold
	task.delay(duration or 3, function()
		if textLabel then
			textLabel:Destroy()
		end
	end)
	return textLabel
end

-- Cooldown and loop states
local cooldown = false
local selfDestructActive = false

-- Teleport helper: teleport player safely with teleport sound and animation
local function teleportWithChecks(pos)
	if not pos then return end
	local hrp = getHRP(LocalPlayer)
	if not hrp then return end
	if cooldown then return end
	
	teleportSound:Play()
	hrp.CFrame = CFrame.new(pos)
end

-- Check if stuck inside walls or under map
local function isStuck()
	local hrp = getHRP(LocalPlayer)
	if not hrp then return false end

	-- Cast ray downwards a bit to see if ground is below 4 studs
	local ray = Ray.new(hrp.Position, Vector3.new(0, -5, 0))
	local part, pos = Workspace:FindPartOnRay(ray, LocalPlayer.Character)
	if not part then
		-- No ground under player, likely stuck under map
		return true
	end

	-- Check if inside wall (collidable part too close)
	local region = Region3.new(hrp.Position - Vector3.new(2,3,2), hrp.Position + Vector3.new(2,3,2))
	local parts = Workspace:FindPartsInRegion3(region, nil, 5)
	for _, p in pairs(parts) do
		if p.CanCollide and p.Transparency < 0.95 and p ~= hrp then
			return true
		end
	end

	return false
end

-- Auto teleport out if stuck with delay, cooldown, and bypass message
local function autoTeleportOut()
	if cooldown then return end
	cooldown = true

	local furthest = getFurthest()
	local hrp = getHRP(LocalPlayer)
	if hrp then
		task.wait(0.1)
		teleportSound:Play()
		hrp.CFrame = CFrame.new(furthest)
		showText("Successfully bypassed anti cheat", Color3.fromRGB(0,255,0), 3)
	end

	task.delay(2.3, function()
		cooldown = false
	end)
end

-- Variables
local isActive = false
local viewingPlayer = nil

-- Teleport behind player helper
local function teleportBehindPlayer(target)
	if not target then return false end
	local hrp = getHRP(LocalPlayer)
	local targetHRP = getHRP(target)
	if not hrp or not targetHRP then return false end

	-- Calculate 45 studs behind target (relative to target lookVector)
	local behindPos = targetHRP.Position - targetHRP.CFrame.LookVector * 45
	-- Try safe check
	if safeCFrame(behindPos) then
		teleportWithChecks(behindPos)
	else
		-- Teleport to furthest instead if blocked
		local furthest = getFurthest()
		teleportWithChecks(furthest)
	end
	return true
end

-- Self destruct sequence: repeatedly teleports furthest until stopped
local function selfDestructLoop()
	selfDestructActive = true
	showText("Self-Destruct Mode ACTIVE", Color3.fromRGB(255, 0, 0), 5)
	while selfDestructActive do
		local humanoid = getCharacter(LocalPlayer):FindFirstChildOfClass("Humanoid")
		if humanoid and humanoid.Health > 0 then
			local furthest = getFurthest()
			teleportWithChecks(furthest)
		else
			break
		end
		task.wait(0.75)
	end
	showText("Self-Destruct Mode STOPPED", Color3.fromRGB(0, 255, 0), 3)
end

local function stopSelfDestruct()
	selfDestructActive = false
end

-- Circle loop: teleport in circle 5 times on map with WalkSpeed 45 and 0.06 wait (3x faster)
local function circleLoop()
	local root = getHRP(LocalPlayer)
	if not root then return end

	local centerPos = root.Position
	local radius = 25
	local count = 5
	local speed = 45
	local humanoid = getCharacter(LocalPlayer):FindFirstChildOfClass("Humanoid")
	if not humanoid then return end

	local originalSpeed = humanoid.WalkSpeed
	humanoid.WalkSpeed = speed
	speedSound:Play()

	for i = 1, count do
		for deg = 0, 360, 10 do
			local rad = math.rad(deg)
			local x = centerPos.X + math.cos(rad) * radius
			local z = centerPos.Z + math.sin(rad) * radius
			local y = centerPos.Y

			local pos = Vector3.new(x, y, z)
			if safeCFrame(pos) then
				teleportWithChecks(pos)
			else
				-- If unsafe, try smaller radius until safe or no radius left
				local tries = 0
				local maxTries = 10
				local newRadius = radius
				local safePos = nil
				while tries < maxTries do
					newRadius = newRadius - 2
					if newRadius <= 0 then break end
					x = centerPos.X + math.cos(rad) * newRadius
					z = centerPos.Z + math.sin(rad) * newRadius
					pos = Vector3.new(x, y, z)
					if safeCFrame(pos) then
						safePos = pos
						break
					end
					tries = tries + 1
				end
				if safePos then
					teleportWithChecks(safePos)
				end
			end
			task.wait(0.06) -- 3x faster than before (0.2 / 3 ‚âà 0.06)
		end
	end

	humanoid.WalkSpeed = originalSpeed
end

-- Main loop
local function mainLoop()
	local hrp = getHRP(LocalPlayer)
	if not hrp then return end

	while isActive do
		local pos = hrp.Position

		-- Auto teleport out if stuck
		if isStuck() then
			autoTeleportOut()
		end

		local nearestDist = math.huge
		local nearestPlayer = nil
		local playersIn195 = {}

		for _, plr in pairs(Players:GetPlayers()) do
			if plr ~= LocalPlayer then
				local targetHRP = getHRP(plr)
				if targetHRP then
					local dist = (targetHRP.Position - pos).Magnitude
					if dist <= 35 then
						-- Trigger self destruct mode once and stop main loop
						if not selfDestructActive then
							task.spawn(selfDestructLoop)
						end
					elseif dist <= 85 then
						-- Teleport behind closest player within 85 studs
						if dist < nearestDist then
							nearestDist = dist
							nearestPlayer = plr
						end
					elseif dist <= 195 then
						table.insert(playersIn195, plr)
					end
				end
			end
		end

		if nearestPlayer then
			teleportBehindPlayer(nearestPlayer)
		end

		if #playersIn195 > 0 and not selfDestructActive then
			circleLoop()
		end

		task.wait(0.15)
	end
end

-- Hide/show GUI button toggling
local guiVisible = true
hideGuiBtn.MouseButton1Click:Connect(function()
	guiVisible = not guiVisible
	viewBtn.Visible = guiVisible
	unviewBtn.Visible = guiVisible
	testSelfDestructBtn.Visible = guiVisible
	testCircleLoopBtn.Visible = guiVisible
end)

-- Buttons connections
toggleBtn.MouseButton1Click:Connect(function()
	isActive = not isActive
	if isActive then
		toggleBtn.Text = "Behind Ya: ON"
		toggleBtn.BackgroundColor3 = Color3.fromRGB(255, 255, 0)
		task.spawn(mainLoop)
	else
		toggleBtn.Text = "Behind Ya: OFF"
		toggleBtn.BackgroundColor3 = Color3.fromRGB(0, 0, 255)
		stopSelfDestruct()
	end
end)

-- View buttons cycling players
local playersList = {}
local currentIdx = 0
viewBtn.MouseButton1Click:Connect(function()
	playersList = {}
	for _, plr in pairs(Players:GetPlayers()) do
		if plr ~= LocalPlayer then
			table.insert(playersList, plr)
		end
	end
	if #playersList == 0 then
		showText("No other players found", Color3.new(1, 1, 0), 3)
		return
	end
	currentIdx = currentIdx + 1
	if currentIdx > #playersList then currentIdx = 1 end
	viewingPlayer = playersList[currentIdx]
	local char = getCharacter(viewingPlayer)
	if char then
		local hum = char:FindFirstChildOfClass("Humanoid")
		if hum then
			Camera.CameraSubject = hum
			showText("Viewing: "..viewingPlayer.Name, Color3.new(0, 1, 1), 3)
		end
	end
end)

unviewBtn.MouseButton1Click:Connect(function()
	viewingPlayer = nil
	local char = getCharacter(LocalPlayer)
	if char then
		local hum = char:FindFirstChildOfClass("Humanoid")
		if hum then
			Camera.CameraSubject = hum
			showText("Viewing self", Color3.new(0, 1, 1), 3)
		end
	end
end)

testSelfDestructBtn.MouseButton1Click:Connect(function()
	if not selfDestructActive then
		task.spawn(selfDestructLoop)
	else
		showText("Self-Destruct already active", Color3.fromRGB(255, 100, 100), 3)
	end
end)

testCircleLoopBtn.MouseButton1Click:Connect(function()
	if not selfDestructActive then
		task.spawn(circleLoop)
	else
		showText("Stop Self-Destruct first", Color3.fromRGB(255, 100, 100), 3)
	end
end)

-- Stop self destruct if user disables Behind Ya or toggles off
toggleBtn.MouseButton1Click:Connect(function()
	if not isActive then
		stopSelfDestruct()
	end
end)

-- Finished script
print("Behind Ya script loaded! Use buttons to control.")

